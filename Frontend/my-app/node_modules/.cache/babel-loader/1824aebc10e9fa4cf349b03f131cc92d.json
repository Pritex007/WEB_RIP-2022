{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prite\\\\WebstormProjects\\\\lab4\\\\my-app\\\\src\\\\Pages\\\\Rent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Row, Button, Spinner } from \"react-bootstrap\";\nimport TruckCard from \"../Components/TruckCard\";\nimport IntervalSelector from \"../Components/IntervalSelector\";\nimport getData from \"../Components/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableBlockStyle = {\n  margin: \"20px 15%\",\n  textAlign: 'center'\n};\nconst TableCardStyle = {\n  display: \"inline-block\",\n  margin: \"8px 8px 8px 0px\"\n};\nfunction Rent() {\n  _s();\n  const [selectedCards, setSelectedCards] = useState([]);\n  useEffect(() => {\n    const getTrucks = async () => {\n      const res = await fetch(`/api/cars/`).then(response => {\n        return response.json();\n      }).catch(() => {\n        return {\n          resultCount: 1,\n          results: []\n        };\n      });\n      console.log(res);\n      return res;\n    };\n    return () => {};\n  }, []);\n  const onClickSelect = id => {\n    if (selectedCards.includes(id)) {\n      setSelectedCards(prev => prev.filter(_id => _id != id));\n    } else {\n      setSelectedCards(prev => [...prev, id]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IntervalSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), !getData().length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A \\u0441\\u043E\\u0436\\u0430\\u043B\\u0435\\u043D\\u0438\\u044E, \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0442\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430 :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-4\",\n      style: TableBlockStyle,\n      children: getData().map(item => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TruckCard, {\n            id: item.pk,\n            name: item.name,\n            brand: item.brand,\n            price: item.price,\n            capacity: item.capacity,\n            image: item.image,\n            isSelected: selectedCards.includes(item.pk),\n            onClickSelect: onClickSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Rent, \"lZOhVSvOk2tmf+lyasoXG56DGvk=\");\n_c = Rent;\nexport default Rent;\nvar _c;\n$RefreshReg$(_c, \"Rent\");","map":{"version":3,"names":["React","useEffect","useState","Card","Col","Row","Button","Spinner","TruckCard","IntervalSelector","getData","TableBlockStyle","margin","textAlign","TableCardStyle","display","Rent","selectedCards","setSelectedCards","getTrucks","res","fetch","then","response","json","catch","resultCount","results","console","log","onClickSelect","id","includes","prev","filter","_id","length","map","item","pk","name","brand","price","capacity","image"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Pages/Rent.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, Col, Row, Button, Spinner} from \"react-bootstrap\";\r\nimport TruckCard from \"../Components/TruckCard\";\r\nimport IntervalSelector from \"../Components/IntervalSelector\";\r\nimport getData from \"../Components/data\";\r\n\r\nconst TableBlockStyle = {\r\n    margin: \"20px 15%\",\r\n    textAlign: 'center',\r\n}\r\n\r\nconst TableCardStyle = {\r\n    display: \"inline-block\",\r\n    margin: \"8px 8px 8px 0px\",\r\n}\r\n\r\nfunction Rent() {\r\n    const [selectedCards, setSelectedCards] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const  getTrucks = async () => {\r\n            const res = await fetch(`/api/cars/`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).catch(()=>{\r\n                    return {resultCount:1, results:[]}\r\n                })\r\n            console.log(res)\r\n            return res\r\n        }\r\n\r\n\r\n        return () => {\r\n        }\r\n    },[])\r\n\r\n    const onClickSelect = (id) => {\r\n        if (selectedCards.includes(id)) {\r\n            setSelectedCards(prev => prev.filter(_id => _id != id));\r\n        } else {\r\n            setSelectedCards((prev) => [...prev, id])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IntervalSelector/>\r\n            {!getData().length && <div>\r\n                <h1>К сожалению, пока нет свободного транспорта :(</h1>\r\n            </div>}\r\n\r\n            <Row className=\"g-4\" style={TableBlockStyle}>\r\n                {getData().map((item)=>{\r\n                    return<Col>\r\n                        <TruckCard id={item.pk}\r\n                                   name={item.name}\r\n                                   brand={item.brand}\r\n                                   price={item.price}\r\n                                   capacity={item.capacity}\r\n                                   image={item.image}\r\n                                   isSelected={selectedCards.includes(item.pk)}\r\n                                   onClickSelect={onClickSelect}/>\r\n                    </Col>\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,QAAO,iBAAiB;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAAA;AAEzC,MAAMC,eAAe,GAAG;EACpBC,MAAM,EAAE,UAAU;EAClBC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,cAAc,GAAG;EACnBC,OAAO,EAAE,cAAc;EACvBH,MAAM,EAAE;AACZ,CAAC;AAED,SAASI,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAI;IACV,MAAOkB,SAAS,GAAG,YAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,YAAW,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAK;QAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;MAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAI;QACT,OAAO;UAACC,WAAW,EAAC,CAAC;UAAEC,OAAO,EAAC;QAAE,CAAC;MACtC,CAAC,CAAC;MACNC,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;MAChB,OAAOA,GAAG;IACd,CAAC;IAGD,OAAO,MAAM,CACb,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMU,aAAa,GAAIC,EAAE,IAAK;IAC1B,IAAId,aAAa,CAACe,QAAQ,CAACD,EAAE,CAAC,EAAE;MAC5Bb,gBAAgB,CAACe,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,IAAIJ,EAAE,CAAC,CAAC;IAC3D,CAAC,MAAM;MACHb,gBAAgB,CAAEe,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,EAAE,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAE,EAClB,CAACrB,OAAO,EAAE,CAAC0B,MAAM,iBAAI;MAAA,uBAClB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuD;MAAA;MAAA;MAAA;IAAA,QACrD,eAEN,QAAC,GAAG;MAAC,SAAS,EAAC,KAAK;MAAC,KAAK,EAAEzB,eAAgB;MAAA,UACvCD,OAAO,EAAE,CAAC2B,GAAG,CAAEC,IAAI,IAAG;QACnB,oBAAM,QAAC,GAAG;UAAA,uBACN,QAAC,SAAS;YAAC,EAAE,EAAEA,IAAI,CAACC,EAAG;YACZ,IAAI,EAAED,IAAI,CAACE,IAAK;YAChB,KAAK,EAAEF,IAAI,CAACG,KAAM;YAClB,KAAK,EAAEH,IAAI,CAACI,KAAM;YAClB,QAAQ,EAAEJ,IAAI,CAACK,QAAS;YACxB,KAAK,EAAEL,IAAI,CAACM,KAAM;YAClB,UAAU,EAAE3B,aAAa,CAACe,QAAQ,CAACM,IAAI,CAACC,EAAE,CAAE;YAC5C,aAAa,EAAET;UAAc;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACxC;MACV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACP;AAEX;AAAC,GAnDQd,IAAI;AAAA,KAAJA,IAAI;AAqDb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}