{"ast":null,"code":"'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({\n    request: req\n  }, self.options, toOptions(host, port, localAddress));\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function (socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' + new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade); // for v0.6\n  connectReq.once('connect', onConnect); // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function () {\n      onConnect(res, socket, head);\n    });\n  }\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d', res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' + 'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n  function onError(cause) {\n    connectReq.removeAllListeners();\n    debug('tunneling socket could not be established, cause=%s\\n', cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' + 'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket);\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function (socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function (socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') {\n    // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  };\n} else {\n  debug = function () {};\n}\nexports.debug = debug; // for test","map":{"version":3,"names":["net","require","tls","http","https","events","assert","util","exports","httpOverHttp","httpsOverHttp","httpOverHttps","httpsOverHttps","options","agent","TunnelingAgent","request","createSocket","createSecureSocket","defaultPort","self","proxyOptions","proxy","maxSockets","Agent","defaultMaxSockets","requests","sockets","on","onFree","socket","host","port","localAddress","toOptions","i","len","length","pending","splice","onSocket","destroy","removeSocket","inherits","EventEmitter","prototype","addRequest","req","mergeOptions","push","onCloseOrRemove","emit","err","removeListener","cb","placeholder","connectOptions","method","path","headers","proxyAuth","Buffer","toString","debug","connectReq","useChunkedEncodingByDefault","once","onResponse","onUpgrade","onConnect","onError","end","res","upgrade","head","process","nextTick","removeAllListeners","statusCode","error","Error","code","indexOf","cause","message","stack","pos","shift","call","hostHeader","getHeader","tlsOptions","servername","replace","secureSocket","connect","target","arguments","overrides","keys","Object","j","keyLen","k","undefined","env","NODE_DEBUG","test","args","Array","slice","unshift","console","apply"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/node_modules/tunnel/lib/tunnel.js"],"sourcesContent":["'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}