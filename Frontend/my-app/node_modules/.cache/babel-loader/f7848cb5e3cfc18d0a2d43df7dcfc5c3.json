{"ast":null,"code":"export const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  LOAD_BRANDS = 'LOAD_BRANDS',\n  GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\n  SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL';\nexport const reducer = (state, action) => {\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  console.log(state);\n  switch (type) {\n    case LOAD_TRUCKS:\n      const fetchTrucks = async () => {\n        const res = await fetch(`/api/cars/`).then(response => {\n          return response.json();\n        }).catch(() => {\n          return {\n            resultCount: 0,\n            results: []\n          };\n        });\n        console.log(res);\n        state.trucks = res;\n        fetchBrands(res);\n        return {\n          ...state,\n          trucks: res\n        };\n      };\n    case LOAD_BRANDS:\n      const fetchBrands = async () => {\n        const res = [];\n        console.log(state);\n        for (const element of state.trucks) {\n          const tempRes = await fetch(`/api/brands/${element.brand}`).then(response => {\n            return response.json();\n          }).catch(() => {\n            return {\n              resultCount: 0,\n              results: []\n            };\n          });\n          res.push(tempRes.title);\n        }\n        return {\n          ...state,\n          brands: res\n        };\n      };\n      fetchBrands();\n    case TOGGLE_TRUCK:\n      if (state.selectedTrucks.includes(payload.id)) {\n        state.selectedTrucks = state.selectedTrucks.filter(id => id != payload.id);\n      } else {\n        state.selectedTrucks = [...state.selectedTrucks, payload.id];\n      }\n    case GET_SELECTED_TRUCKS_FROM_LOCAL:\n      const raw = localStorage.getItem('selectedCards') || [];\n      return {\n        selectedTrucks: JSON.parse(raw)\n      };\n    case SET_SELECTED_TRUCKS_FOR_LOCAL:\n      localStorage.setItem('selectedCards', JSON.stringify(state.selectedTrucks));\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["TOGGLE_TRUCK","LOAD_TRUCKS","LOAD_BRANDS","GET_SELECTED_TRUCKS_FROM_LOCAL","SET_SELECTED_TRUCKS_FOR_LOCAL","reducer","state","action","type","payload","console","log","fetchTrucks","res","fetch","then","response","json","catch","resultCount","results","trucks","fetchBrands","element","tempRes","brand","push","title","brands","selectedTrucks","includes","id","filter","raw","localStorage","getItem","JSON","parse","setItem","stringify"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["export const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_BRANDS = 'LOAD_BRANDS',\r\n    GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL'\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    console.log(state)\r\n    switch(type) {\r\n        case LOAD_TRUCKS:\r\n            const fetchTrucks = async () => {\r\n                const res = await fetch(`/api/cars/`)\r\n                    .then((response) => {\r\n                        return response.json();\r\n                    }).catch(() => {\r\n                        return {resultCount: 0, results: []}\r\n                    })\r\n                console.log(res)\r\n                state.trucks = res\r\n                fetchBrands(res)\r\n                return {...state, trucks: res }\r\n            }\r\n        case LOAD_BRANDS:\r\n            const fetchBrands = async () => {\r\n                const res = []\r\n                console.log(state)\r\n                for (const element of state.trucks) {\r\n                    const tempRes = await fetch(`/api/brands/${element.brand}`)\r\n                        .then((response) => {\r\n                            return response.json();\r\n                        }).catch(() => {\r\n                            return {resultCount: 0, results: []}\r\n                        })\r\n                    res.push(tempRes.title)\r\n                }\r\n                return {...state, brands: res }\r\n            }\r\n            fetchBrands()\r\n\r\n        case TOGGLE_TRUCK:\r\n            if (state.selectedTrucks.includes(payload.id)) {\r\n                state.selectedTrucks = state.selectedTrucks.filter(id => id != payload.id)\r\n            } else {\r\n                state.selectedTrucks = [ ...state.selectedTrucks, payload.id]\r\n            }\r\n\r\n        case GET_SELECTED_TRUCKS_FROM_LOCAL:\r\n            const raw = localStorage.getItem('selectedCards') || []\r\n            return { selectedTrucks: JSON.parse(raw) }\r\n\r\n        case SET_SELECTED_TRUCKS_FOR_LOCAL:\r\n            localStorage.setItem('selectedCards', JSON.stringify(state.selectedTrucks))\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MACHA,YAAY,GAAG,cAAc;EAC7BC,WAAW,GAAG,aAAa;EAC3BC,WAAW,GAAG,aAAa;EAC3BC,8BAA8B,GAAG,gCAAgC;EACjEC,6BAA6B,GAAG,gCAAgC;AAEpE,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EACI,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChCG,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAClB,QAAOE,IAAI;IACP,KAAKP,WAAW;MACZ,MAAMW,WAAW,GAAG,YAAY;QAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,YAAW,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAK;UAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;QAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;UACX,OAAO;YAACC,WAAW,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAC;QACxC,CAAC,CAAC;QACNV,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAChBP,KAAK,CAACe,MAAM,GAAGR,GAAG;QAClBS,WAAW,CAACT,GAAG,CAAC;QAChB,OAAO;UAAC,GAAGP,KAAK;UAAEe,MAAM,EAAER;QAAI,CAAC;MACnC,CAAC;IACL,KAAKX,WAAW;MACZ,MAAMoB,WAAW,GAAG,YAAY;QAC5B,MAAMT,GAAG,GAAG,EAAE;QACdH,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;QAClB,KAAK,MAAMiB,OAAO,IAAIjB,KAAK,CAACe,MAAM,EAAE;UAChC,MAAMG,OAAO,GAAG,MAAMV,KAAK,CAAE,eAAcS,OAAO,CAACE,KAAM,EAAC,CAAC,CACtDV,IAAI,CAAEC,QAAQ,IAAK;YAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;UAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;YACX,OAAO;cAACC,WAAW,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAE,CAAC;UACxC,CAAC,CAAC;UACNP,GAAG,CAACa,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;QAC3B;QACA,OAAO;UAAC,GAAGrB,KAAK;UAAEsB,MAAM,EAAEf;QAAI,CAAC;MACnC,CAAC;MACDS,WAAW,EAAE;IAEjB,KAAKtB,YAAY;MACb,IAAIM,KAAK,CAACuB,cAAc,CAACC,QAAQ,CAACrB,OAAO,CAACsB,EAAE,CAAC,EAAE;QAC3CzB,KAAK,CAACuB,cAAc,GAAGvB,KAAK,CAACuB,cAAc,CAACG,MAAM,CAACD,EAAE,IAAIA,EAAE,IAAItB,OAAO,CAACsB,EAAE,CAAC;MAC9E,CAAC,MAAM;QACHzB,KAAK,CAACuB,cAAc,GAAG,CAAE,GAAGvB,KAAK,CAACuB,cAAc,EAAEpB,OAAO,CAACsB,EAAE,CAAC;MACjE;IAEJ,KAAK5B,8BAA8B;MAC/B,MAAM8B,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;MACvD,OAAO;QAAEN,cAAc,EAAEO,IAAI,CAACC,KAAK,CAACJ,GAAG;MAAE,CAAC;IAE9C,KAAK7B,6BAA6B;MAC9B8B,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAACjC,KAAK,CAACuB,cAAc,CAAC,CAAC;IAE/E;MACI,OAAOvB,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module"}