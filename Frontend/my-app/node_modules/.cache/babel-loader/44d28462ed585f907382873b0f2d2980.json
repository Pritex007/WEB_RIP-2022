{"ast":null,"code":"export const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  LOAD_BRANDS = 'LOAD_BRANDS',\n  GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\n  SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL';\nexport const reducer = (state, action) => {\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOAD_TRUCKS:\n      const fetchTrucks = async () => {\n        const res = await fetch(`/api/cars/`).then(response => {\n          return response.json();\n        }).catch(() => {\n          return {\n            resultCount: 0,\n            results: []\n          };\n        });\n        console.log(res);\n        state.selectedTrucks = res;\n        return res;\n      };\n      fetchTrucks().then(value => {\n        return {\n          trucks: [value]\n        };\n      });\n    case LOAD_BRANDS:\n      const fetchBrands = async () => {\n        const res = [];\n        console.log(state.trucks);\n        for (const element of state.trucks) {\n          const tempRes = await fetch(`/api/brands/${element.brand}`).then(response => {\n            return response.json();\n          }).catch(() => {\n            return {\n              resultCount: 0,\n              results: []\n            };\n          });\n          res.push(tempRes.title);\n        }\n        console.log(res);\n        return res;\n      };\n      fetchTrucks().then(value => {\n        return {\n          brands: [value]\n        };\n      });\n    case TOGGLE_TRUCK:\n      if (state.selectedTrucks.includes(payload.id)) {\n        return {\n          selectedTrucks: state.selectedTrucks.filter(id => id != payload.id)\n        };\n      } else {\n        return {\n          selectedTrucks: [...state.selectedTrucks, payload]\n        };\n      }\n    case GET_SELECTED_TRUCKS_FROM_LOCAL:\n      const raw = localStorage.getItem('selectedCards') || [];\n      return {\n        selectedTrucks: JSON.parse(raw)\n      };\n    case SET_SELECTED_TRUCKS_FOR_LOCAL:\n      localStorage.setItem('selectedCards', JSON.stringify(state.selectedTrucks));\n  }\n};","map":{"version":3,"names":["TOGGLE_TRUCK","LOAD_TRUCKS","LOAD_BRANDS","GET_SELECTED_TRUCKS_FROM_LOCAL","SET_SELECTED_TRUCKS_FOR_LOCAL","reducer","state","action","type","payload","fetchTrucks","res","fetch","then","response","json","catch","resultCount","results","console","log","selectedTrucks","value","trucks","fetchBrands","element","tempRes","brand","push","title","brands","includes","id","filter","raw","localStorage","getItem","JSON","parse","setItem","stringify"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["export const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_BRANDS = 'LOAD_BRANDS',\r\n    GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL'\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    switch(type) {\r\n        case LOAD_TRUCKS:\r\n            const fetchTrucks = async () => {\r\n                const res = await fetch(`/api/cars/`)\r\n                    .then((response) => {\r\n                        return response.json();\r\n                    }).catch(() => {\r\n                        return {resultCount: 0, results: []}\r\n                    })\r\n                console.log(res)\r\n                state.selectedTrucks = res\r\n                return res\r\n            }\r\n            fetchTrucks().then(value => { return { trucks: [value] }})\r\n\r\n        case LOAD_BRANDS:\r\n            const fetchBrands = async () => {\r\n                const res = []\r\n                console.log(state.trucks)\r\n                for (const element of state.trucks) {\r\n                    const tempRes = await fetch(`/api/brands/${element.brand}`)\r\n                        .then((response) => {\r\n                            return response.json();\r\n                        }).catch(() => {\r\n                            return {resultCount: 0, results: []}\r\n                        })\r\n                    res.push(tempRes.title)\r\n                }\r\n                console.log(res)\r\n                return res\r\n            }\r\n            fetchTrucks().then(value => { return { brands: [value] }})\r\n\r\n        case TOGGLE_TRUCK:\r\n            if (state.selectedTrucks.includes(payload.id)) {\r\n                return { selectedTrucks: state.selectedTrucks.filter(id => id != payload.id) }\r\n            } else {\r\n                return { selectedTrucks: [ ...state.selectedTrucks, payload] }\r\n            }\r\n\r\n        case GET_SELECTED_TRUCKS_FROM_LOCAL:\r\n            const raw = localStorage.getItem('selectedCards') || []\r\n            return { selectedTrucks: JSON.parse(raw) }\r\n\r\n        case SET_SELECTED_TRUCKS_FOR_LOCAL:\r\n            localStorage.setItem('selectedCards', JSON.stringify(state.selectedTrucks))\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MACHA,YAAY,GAAG,cAAc;EAC7BC,WAAW,GAAG,aAAa;EAC3BC,WAAW,GAAG,aAAa;EAC3BC,8BAA8B,GAAG,gCAAgC;EACjEC,6BAA6B,GAAG,gCAAgC;AAEpE,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EACI,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAOC,IAAI;IACP,KAAKP,WAAW;MACZ,MAAMS,WAAW,GAAG,YAAY;QAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,YAAW,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAK;UAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;QAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;UACX,OAAO;YAACC,WAAW,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAC;QACxC,CAAC,CAAC;QACNC,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;QAChBL,KAAK,CAACe,cAAc,GAAGV,GAAG;QAC1B,OAAOA,GAAG;MACd,CAAC;MACDD,WAAW,EAAE,CAACG,IAAI,CAACS,KAAK,IAAI;QAAE,OAAO;UAAEC,MAAM,EAAE,CAACD,KAAK;QAAE,CAAC;MAAA,CAAC,CAAC;IAE9D,KAAKpB,WAAW;MACZ,MAAMsB,WAAW,GAAG,YAAY;QAC5B,MAAMb,GAAG,GAAG,EAAE;QACdQ,OAAO,CAACC,GAAG,CAACd,KAAK,CAACiB,MAAM,CAAC;QACzB,KAAK,MAAME,OAAO,IAAInB,KAAK,CAACiB,MAAM,EAAE;UAChC,MAAMG,OAAO,GAAG,MAAMd,KAAK,CAAE,eAAca,OAAO,CAACE,KAAM,EAAC,CAAC,CACtDd,IAAI,CAAEC,QAAQ,IAAK;YAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;UAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;YACX,OAAO;cAACC,WAAW,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAE,CAAC;UACxC,CAAC,CAAC;UACNP,GAAG,CAACiB,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;QAC3B;QACAV,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;QAChB,OAAOA,GAAG;MACd,CAAC;MACDD,WAAW,EAAE,CAACG,IAAI,CAACS,KAAK,IAAI;QAAE,OAAO;UAAEQ,MAAM,EAAE,CAACR,KAAK;QAAE,CAAC;MAAA,CAAC,CAAC;IAE9D,KAAKtB,YAAY;MACb,IAAIM,KAAK,CAACe,cAAc,CAACU,QAAQ,CAACtB,OAAO,CAACuB,EAAE,CAAC,EAAE;QAC3C,OAAO;UAAEX,cAAc,EAAEf,KAAK,CAACe,cAAc,CAACY,MAAM,CAACD,EAAE,IAAIA,EAAE,IAAIvB,OAAO,CAACuB,EAAE;QAAE,CAAC;MAClF,CAAC,MAAM;QACH,OAAO;UAAEX,cAAc,EAAE,CAAE,GAAGf,KAAK,CAACe,cAAc,EAAEZ,OAAO;QAAE,CAAC;MAClE;IAEJ,KAAKN,8BAA8B;MAC/B,MAAM+B,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;MACvD,OAAO;QAAEf,cAAc,EAAEgB,IAAI,CAACC,KAAK,CAACJ,GAAG;MAAE,CAAC;IAE9C,KAAK9B,6BAA6B;MAC9B+B,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAAClC,KAAK,CAACe,cAAc,CAAC,CAAC;EAAA;AAEvF,CAAC"},"metadata":{},"sourceType":"module"}