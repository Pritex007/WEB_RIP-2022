{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prite\\\\WebstormProjects\\\\lab4\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NaviBar from \"./Components/NaviBar\";\nimport About from \"./Pages/About\";\nimport Rent from \"./Pages/Rent\";\nimport DetailedTruck from \"./Pages/DetailedTruck\";\nimport { Context, fetchTruck, fetchTrucks, fetchBrand } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [trucks, setTrucks] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [truck, setTruck] = useState([]);\n  const [brand, setBrand] = useState([]);\n  const onClickSelect = id => {\n    if (selectedCards.includes(id)) {\n      setSelectedCards(prev => prev.filter(_id => _id != id));\n    } else {\n      setSelectedCards(prev => [...prev, id]);\n    }\n  };\n  const fetchTrucks = async () => {\n    const res = await fetch(`/api/cars/`).then(response => {\n      return response.json();\n    }).catch(() => {\n      return {\n        resultCount: 0,\n        results: []\n      };\n    });\n    console.log(res);\n    setTrucks(res);\n  };\n  const fetchTruck = async truckID => {\n    const res = await fetch(`/api/cars/${truckID}`).then(response => {\n      return response.json();\n    }).catch(() => {\n      return {\n        resultCount: 0,\n        results: []\n      };\n    });\n    console.log(res);\n    setTruck(res);\n  };\n  const fetchBrands = async () => {\n    const res = [];\n    for (const element of trucks) {\n      const res = await fetch(`/api/brands/${element.brand}`).then(response => {\n        return response.json();\n      }).catch(() => {\n        return {\n          resultCount: 0,\n          results: []\n        };\n      });\n    }\n    console.log(res);\n    setBrand(res);\n  };\n  const fetchBrand = async () => {\n    const res = await fetch(`/api/brands/${truck.brand}`).then(response => {\n      return response.json();\n    }).catch(() => {\n      return {\n        resultCount: 0,\n        results: []\n      };\n    });\n    console.log(res);\n    setBrand(res);\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      onClickSelect,\n      fetchTrucks,\n      fetchTruck,\n      fetchBrand,\n      fetchBrands\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: [/*#__PURE__*/_jsxDEV(NaviBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Rent, {\n              trucks: trucks,\n              brands: brands,\n              selectedCards: selectedCards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"rent/:id\",\n            element: /*#__PURE__*/_jsxDEV(DetailedTruck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"uc4CktkL6wOtDjr+F4FpJe+0ArA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","BrowserRouter","Router","Routes","NaviBar","About","Rent","DetailedTruck","Context","fetchTruck","fetchTrucks","fetchBrand","App","selectedCards","setSelectedCards","trucks","setTrucks","brands","setBrands","truck","setTruck","brand","setBrand","onClickSelect","id","includes","prev","filter","_id","res","fetch","then","response","json","catch","resultCount","results","console","log","truckID","fetchBrands","element"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Route, BrowserRouter as Router, Routes} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NaviBar from \"./Components/NaviBar\";\nimport About from \"./Pages/About\";\nimport Rent from \"./Pages/Rent\";\nimport DetailedTruck from \"./Pages/DetailedTruck\";\nimport {Context, fetchTruck, fetchTrucks, fetchBrand} from './context'\n\n\nfunction App() {\n    const [selectedCards, setSelectedCards] = useState([])\n    const [trucks, setTrucks] = useState([])\n    const [brands, setBrands] = useState([])\n\n    const [truck, setTruck] = useState([])\n    const [brand, setBrand] = useState([])\n\n    const onClickSelect = (id) => {\n        if (selectedCards.includes(id)) {\n            setSelectedCards(prev => prev.filter(_id => _id != id));\n        } else {\n            setSelectedCards((prev) => [...prev, id])\n        }\n    }\n\n\n    const fetchTrucks = async () => {\n        const res = await fetch(`/api/cars/`)\n            .then((response) => {\n                return response.json();\n            }).catch(() => {\n                return {resultCount: 0, results: []}\n            })\n        console.log(res)\n        setTrucks(res)\n    }\n\n    const fetchTruck = async (truckID) => {\n        const res = await fetch(`/api/cars/${truckID}`)\n            .then((response) => {\n                return response.json();\n            }).catch(() => {\n                return {resultCount: 0, results: []}\n            })\n        console.log(res)\n        setTruck(res)\n    }\n\n    const fetchBrands = async () => {\n        const res = []\n        for (const element of trucks) {\n            const res = await fetch(`/api/brands/${element.brand}`)\n                .then((response) => {\n                    return response.json();\n                }).catch(() => {\n                    return {resultCount: 0, results: []}\n                })\n        }\n        console.log(res)\n        setBrand(res)\n    }\n\n    const fetchBrand = async () => {\n        const res = await fetch(`/api/brands/${truck.brand}`)\n            .then((response) => {\n                return response.json();\n            }).catch(()=>{\n                return {resultCount:0, results:[]}\n            })\n        console.log(res)\n        setBrand(res)\n    }\n\n    return (\n        <Context.Provider value={{\n            onClickSelect,\n            fetchTrucks,\n            fetchTruck,\n            fetchBrand,\n            fetchBrands\n        }}>\n            <Router>\n                <React.StrictMode>\n                    <NaviBar/>\n                    <Routes>\n                        <Route exact path=\"/about\" element={<About/>}/>\n                        <Route  path=\"/\" element={<Rent trucks={trucks} brands={brands} selectedCards={selectedCards}/>}/>\n                        <Route exact path=\"rent/:id\" element={<DetailedTruck/>}/>\n                    </Routes>\n                </React.StrictMode>\n            </Router>\n        </Context.Provider>\n);\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}