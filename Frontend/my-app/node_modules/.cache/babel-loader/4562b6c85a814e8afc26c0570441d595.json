{"ast":null,"code":"export const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\n  SET_SELECTED_TRUCKS_FROM_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL';\nexport const reducer = (state, action) => {\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOAD_TRUCKS:\n      return {\n        trucks: [payload]\n      };\n    case TOGGLE_TRUCK:\n      if (state.selectedTrucks.includes(id)) {\n        state.selectedTrucks = state.selectedTrucks.filter(id => id != payload);\n      } else {\n        state.selectedTrucks = [...state.selectedTrucks, payload];\n      }\n    case GET_SELECTED_TRUCKS_FROM_LOCAL:\n      const fetchTrucks = async () => {\n        const res = await fetch(`/api/cars/`).then(response => {\n          return response.json();\n        }).catch(() => {\n          return {\n            resultCount: 0,\n            results: []\n          };\n        });\n        console.log(res);\n        state.selectedTrucks = res;\n        fetchBrands(res);\n      };\n      const fetchBrands = async tempTrucks => {\n        const res = [];\n        console.log(tempTrucks);\n        for (const element of tempTrucks) {\n          const tempRes = await fetch(`/api/brands/${element.brand}`).then(response => {\n            return response.json();\n          }).catch(() => {\n            return {\n              resultCount: 0,\n              results: []\n            };\n          });\n          res.push(tempRes.title);\n        }\n        console.log(res);\n      };\n      fetchTrucks();\n  }\n};","map":{"version":3,"names":["TOGGLE_TRUCK","LOAD_TRUCKS","GET_SELECTED_TRUCKS_FROM_LOCAL","SET_SELECTED_TRUCKS_FROM_LOCAL","reducer","state","action","type","payload","trucks","selectedTrucks","includes","id","filter","fetchTrucks","res","fetch","then","response","json","catch","resultCount","results","console","log","fetchBrands","tempTrucks","element","tempRes","brand","push","title"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["export const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    SET_SELECTED_TRUCKS_FROM_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL'\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    switch(type) {\r\n        case LOAD_TRUCKS:\r\n            return { trucks: [payload] }\r\n\r\n        case TOGGLE_TRUCK:\r\n            if (state.selectedTrucks.includes(id)) {\r\n                state.selectedTrucks = state.selectedTrucks.filter(id => id != payload)\r\n            } else {\r\n                state.selectedTrucks = [ ...state.selectedTrucks, payload]\r\n            }\r\n\r\n        case GET_SELECTED_TRUCKS_FROM_LOCAL:\r\n            const fetchTrucks = async () => {\r\n                const res = await fetch(`/api/cars/`)\r\n                    .then((response) => {\r\n                        return response.json();\r\n                    }).catch(() => {\r\n                        return {resultCount: 0, results: []}\r\n                    })\r\n                console.log(res)\r\n                state.selectedTrucks = res\r\n                fetchBrands(res)\r\n            }\r\n            const fetchBrands = async (tempTrucks) => {\r\n                const res = []\r\n                console.log(tempTrucks)\r\n                for (const element of tempTrucks) {\r\n                    const tempRes = await fetch(`/api/brands/${element.brand}`)\r\n                        .then((response) => {\r\n                            return response.json();\r\n                        }).catch(() => {\r\n                            return {resultCount: 0, results: []}\r\n                        })\r\n                    res.push(tempRes.title)\r\n                }\r\n                console.log(res)\r\n            }\r\n            fetchTrucks()\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MACHA,YAAY,GAAG,cAAc;EAC7BC,WAAW,GAAG,aAAa;EAC3BC,8BAA8B,GAAG,gCAAgC;EACjEC,8BAA8B,GAAG,gCAAgC;AAErE,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EACI,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAOC,IAAI;IACP,KAAKN,WAAW;MACZ,OAAO;QAAEQ,MAAM,EAAE,CAACD,OAAO;MAAE,CAAC;IAEhC,KAAKR,YAAY;MACb,IAAIK,KAAK,CAACK,cAAc,CAACC,QAAQ,CAACC,EAAE,CAAC,EAAE;QACnCP,KAAK,CAACK,cAAc,GAAGL,KAAK,CAACK,cAAc,CAACG,MAAM,CAACD,EAAE,IAAIA,EAAE,IAAIJ,OAAO,CAAC;MAC3E,CAAC,MAAM;QACHH,KAAK,CAACK,cAAc,GAAG,CAAE,GAAGL,KAAK,CAACK,cAAc,EAAEF,OAAO,CAAC;MAC9D;IAEJ,KAAKN,8BAA8B;MAC/B,MAAMY,WAAW,GAAG,YAAY;QAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,YAAW,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAK;UAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;QAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;UACX,OAAO;YAACC,WAAW,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAC;QACxC,CAAC,CAAC;QACNC,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;QAChBV,KAAK,CAACK,cAAc,GAAGK,GAAG;QAC1BU,WAAW,CAACV,GAAG,CAAC;MACpB,CAAC;MACD,MAAMU,WAAW,GAAG,MAAOC,UAAU,IAAK;QACtC,MAAMX,GAAG,GAAG,EAAE;QACdQ,OAAO,CAACC,GAAG,CAACE,UAAU,CAAC;QACvB,KAAK,MAAMC,OAAO,IAAID,UAAU,EAAE;UAC9B,MAAME,OAAO,GAAG,MAAMZ,KAAK,CAAE,eAAcW,OAAO,CAACE,KAAM,EAAC,CAAC,CACtDZ,IAAI,CAAEC,QAAQ,IAAK;YAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;UAC1B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;YACX,OAAO;cAACC,WAAW,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAE,CAAC;UACxC,CAAC,CAAC;UACNP,GAAG,CAACe,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;QAC3B;QACAR,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;MACpB,CAAC;MACDD,WAAW,EAAE;EAAA;AAEzB,CAAC"},"metadata":{},"sourceType":"module"}