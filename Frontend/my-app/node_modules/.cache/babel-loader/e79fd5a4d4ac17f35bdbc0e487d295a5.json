{"ast":null,"code":"import Cookies from 'js-cookie';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL } from './reducer';\nimport axios, { AxiosInstance } from 'axios';\nexport const checkAuthenticated = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.get(`/api/authenticated`, config);\n    if (res.data.error || res.data.isAuthenticated === 'error') {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        payload: false\n      });\n    } else if (res.data.isAuthenticated === 'success') {\n      dispatch({\n        type: AUTHENTICATED_SUCCESS,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        payload: false\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n      payload: false\n    });\n  }\n};\nexport const login = async (username, password) => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password\n  });\n  try {\n    const res = await axios.post(`/api/login`, body, config);\n    if (res.data.success) {\n      return {\n        type: LOGIN_SUCCESS\n      };\n    } else {\n      return {\n        type: LOGIN_FAIL\n      };\n    }\n  } catch (err) {\n    return {\n      type: LOGIN_FAIL\n    };\n  }\n};\nexport const register = async (username, password, re_password) => {\n  console.log(username, password, re_password);\n  console.log({\n    'Accept': 'application/json',\n    'X-CSRFToken': Cookies.get('csrftoken'),\n    'Content-Type': 'application/json'\n  });\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password,\n    re_password\n  });\n  console.log(\"Body\", body);\n  try {\n    const res = await axios.post(`/api/register`, body, config);\n    console.log(\"Res\", res);\n    if (res.data.error) {\n      return REGISTER_FAIL;\n    } else {\n      return REGISTER_SUCCESS;\n    }\n  } catch (err) {\n    console.log(\"Error\", err);\n    return REGISTER_FAIL;\n  }\n};\nexport const logout = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    'withCredentials': true\n  });\n  try {\n    const res = await axios.post(`/api/logout`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: LOGOUT_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGOUT_FAIL\n    });\n  }\n};","map":{"version":3,"names":["Cookies","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","axios","AxiosInstance","checkAuthenticated","dispatch","config","headers","res","get","data","error","isAuthenticated","type","payload","err","login","username","password","body","JSON","stringify","post","success","register","re_password","console","log","logout"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/auth.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL\r\n} from './reducer';\r\n\r\nimport axios, { AxiosInstance } from 'axios';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`/api/authenticated`, config);\r\n\r\n        if (res.data.error || res.data.isAuthenticated === 'error') {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n        else if (res.data.isAuthenticated === 'success') {\r\n            dispatch({\r\n                type: AUTHENTICATED_SUCCESS,\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n            payload: false\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken'),\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    try {\r\n        const res = await axios.post(`/api/login`, body, config);\r\n\r\n        if (res.data.success) {\r\n            return { type: LOGIN_SUCCESS };\r\n        } else {\r\n            return { type: LOGIN_FAIL };\r\n        }\r\n    } catch(err) {\r\n        return { type: LOGIN_FAIL };\r\n    }\r\n};\r\n\r\nexport const register = async(username, password, re_password) => {\r\n    console.log(username, password, re_password)\r\n    console.log({\r\n        'Accept': 'application/json',\r\n        'X-CSRFToken': Cookies.get('csrftoken'),\r\n        'Content-Type': 'application/json'\r\n    })\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken'),\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    console.log(\"Body\", body)\r\n    try {\r\n        const res = await axios.post(`/api/register`, body, config);\r\n        console.log(\"Res\", res)\r\n        if (res.data.error) {\r\n            return REGISTER_FAIL\r\n        } else {\r\n            return REGISTER_SUCCESS\r\n        }\r\n    } catch (err) {\r\n        console.log(\"Error\", err)\r\n        return REGISTER_FAIL\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken'),\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`/api/logout`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOGOUT_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL\r\n        });\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}