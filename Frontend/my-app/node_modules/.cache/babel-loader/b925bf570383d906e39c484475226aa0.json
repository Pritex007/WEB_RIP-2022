{"ast":null,"code":"export const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  LOAD_TRUCK = 'LOAD_TRUCK',\n  GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\n  SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL',\n  LOAD_ORDERS = \"LOAD_ORDERS\";\nexport const reducer = (state, action) => {\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case LOAD_ORDERS:\n      return {\n        ...state,\n        orders: payload.orders\n      };\n    case LOAD_TRUCKS:\n      return {\n        ...state,\n        trucks: payload.trucks,\n        brands: payload.brands\n      };\n    case LOAD_TRUCK:\n      console.log(\"LOAD_TRUCK SUCCESS\");\n      return {\n        ...state,\n        truck: payload.truck,\n        brand: payload.brand\n      };\n    case TOGGLE_TRUCK:\n      if (state.selectedTrucks.includes(payload.id)) {\n        return {\n          ...state,\n          selectedTrucks: state.selectedTrucks.filter(id => id != payload.id)\n        };\n      } else {\n        return {\n          ...state,\n          selectedTrucks: [...state.selectedTrucks, payload.id]\n        };\n      }\n    case GET_SELECTED_TRUCKS_FROM_LOCAL:\n      const raw = localStorage.getItem('selectedCards') || [];\n      return {\n        ...state,\n        selectedTrucks: JSON.parse(raw)\n      };\n    case SET_SELECTED_TRUCKS_FOR_LOCAL:\n      localStorage.setItem('selectedCards', JSON.stringify(state.selectedTrucks));\n      return state;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["TOGGLE_TRUCK","LOAD_TRUCKS","LOAD_TRUCK","GET_SELECTED_TRUCKS_FROM_LOCAL","SET_SELECTED_TRUCKS_FOR_LOCAL","LOAD_ORDERS","reducer","state","action","type","payload","orders","trucks","brands","console","log","truck","brand","selectedTrucks","includes","id","filter","raw","localStorage","getItem","JSON","parse","setItem","stringify"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["export const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_TRUCK = 'LOAD_TRUCK',\r\n    GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    LOAD_ORDERS = \"LOAD_ORDERS\"\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    switch(type) {\r\n        case LOAD_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: payload.orders\r\n            }\r\n        case LOAD_TRUCKS:\r\n            return {\r\n                ...state,\r\n                trucks: payload.trucks,\r\n                brands: payload.brands\r\n            }\r\n        case LOAD_TRUCK:\r\n            console.log(\"LOAD_TRUCK SUCCESS\")\r\n            return {\r\n                ...state,\r\n                truck: payload.truck,\r\n                brand: payload.brand\r\n            }\r\n        case TOGGLE_TRUCK:\r\n            if (state.selectedTrucks.includes(payload.id)) {\r\n                return {\r\n                    ...state,\r\n                    selectedTrucks: state.selectedTrucks.filter(id => id != payload.id)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    selectedTrucks: [...state.selectedTrucks, payload.id],\r\n                }\r\n            }\r\n\r\n        case GET_SELECTED_TRUCKS_FROM_LOCAL:\r\n            const raw = localStorage.getItem('selectedCards') || []\r\n            return {\r\n                ...state,\r\n                selectedTrucks: JSON.parse(raw),\r\n            }\r\n\r\n        case SET_SELECTED_TRUCKS_FOR_LOCAL:\r\n            localStorage.setItem('selectedCards', JSON.stringify(state.selectedTrucks))\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MACHA,YAAY,GAAG,cAAc;EAC7BC,WAAW,GAAG,aAAa;EAC3BC,UAAU,GAAG,YAAY;EACzBC,8BAA8B,GAAG,gCAAgC;EACjEC,6BAA6B,GAAG,gCAAgC;EAChEC,WAAW,GAAG,aAAa;AAE/B,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EACI,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAOC,IAAI;IACP,KAAKJ,WAAW;MACZ,OAAO;QACH,GAAGE,KAAK;QACRI,MAAM,EAAED,OAAO,CAACC;MACpB,CAAC;IACL,KAAKV,WAAW;MACZ,OAAO;QACH,GAAGM,KAAK;QACRK,MAAM,EAAEF,OAAO,CAACE,MAAM;QACtBC,MAAM,EAAEH,OAAO,CAACG;MACpB,CAAC;IACL,KAAKX,UAAU;MACXY,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,OAAO;QACH,GAAGR,KAAK;QACRS,KAAK,EAAEN,OAAO,CAACM,KAAK;QACpBC,KAAK,EAAEP,OAAO,CAACO;MACnB,CAAC;IACL,KAAKjB,YAAY;MACb,IAAIO,KAAK,CAACW,cAAc,CAACC,QAAQ,CAACT,OAAO,CAACU,EAAE,CAAC,EAAE;QAC3C,OAAO;UACH,GAAGb,KAAK;UACRW,cAAc,EAAEX,KAAK,CAACW,cAAc,CAACG,MAAM,CAACD,EAAE,IAAIA,EAAE,IAAIV,OAAO,CAACU,EAAE;QACtE,CAAC;MACL,CAAC,MAAM;QACH,OAAO;UACH,GAAGb,KAAK;UACRW,cAAc,EAAE,CAAC,GAAGX,KAAK,CAACW,cAAc,EAAER,OAAO,CAACU,EAAE;QACxD,CAAC;MACL;IAEJ,KAAKjB,8BAA8B;MAC/B,MAAMmB,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;MACvD,OAAO;QACH,GAAGjB,KAAK;QACRW,cAAc,EAAEO,IAAI,CAACC,KAAK,CAACJ,GAAG;MAClC,CAAC;IAEL,KAAKlB,6BAA6B;MAC9BmB,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAACrB,KAAK,CAACW,cAAc,CAAC,CAAC;MAC3E,OAAOX,KAAK;IAChB;MACI,OAAOA,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module"}