{"ast":null,"code":"import { defaultState } from \"./context\";\nexport const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  LOAD_TRUCK = 'LOAD_TRUCK',\n  GET_SELECTED_TRUCK_FROM_LOCAL = 'GET_SELECTED_TRUCK_FROM_LOCAL',\n  SET_SELECTED_TRUCK_FOR_LOCAL = 'SET_SELECTED_TRUCK_FROM_LOCAL',\n  LOAD_ORDERS = \"LOAD_ORDERS\",\n  SWITCH_ID = \"SWITCH_ID\",\n  POST_ORDER = \"POST_ORDER\",\n  DATETIME_CHANGE = \"DATETIME_CHANGE\";\nexport const reducer = (state, action) => {\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case DATETIME_CHANGE:\n      return {\n        ...state,\n        time: new Date(window.document.getElementById(\"date_need\").value).toString()\n      };\n    case POST_ORDER:\n      return {\n        state\n      };\n    case SWITCH_ID:\n      return {\n        ...state,\n        selectedTruck: {},\n        id: state.id == 0 ? 1 : 0\n      };\n    case LOAD_ORDERS:\n      return {\n        ...state,\n        orders: payload.orders\n      };\n    case LOAD_TRUCKS:\n      return {\n        ...state,\n        trucks: payload.trucks,\n        brands: payload.brands\n      };\n    case LOAD_TRUCK:\n      console.log(\"LOAD_TRUCK SUCCESS\");\n      return {\n        ...state,\n        truck: payload.truck,\n        brand: payload.brand\n      };\n    case TOGGLE_TRUCK:\n      if (state.selectedTruck == payload.id) {\n        return {\n          ...state,\n          selectedTruck: {}\n        };\n      } else {\n        return {\n          ...state,\n          selectedTruck: payload.id\n        };\n      }\n    case GET_SELECTED_TRUCK_FROM_LOCAL:\n      const raw = localStorage.getItem(`BMSTU USER: ${state.id}`) || {};\n      const prepared = JSON.parse(raw);\n      if (prepared.id == state.id) {\n        return {\n          ...state,\n          selectedTruck: prepared.selectedTruck\n        };\n      } else {\n        return state;\n      }\n    case SET_SELECTED_TRUCK_FOR_LOCAL:\n      console.log(`BMSTU USER: ${state.id}`);\n      localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\n        id: state.id,\n        selectedTruck: state.selectedTruck\n      }));\n      return state;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["defaultState","TOGGLE_TRUCK","LOAD_TRUCKS","LOAD_TRUCK","GET_SELECTED_TRUCK_FROM_LOCAL","SET_SELECTED_TRUCK_FOR_LOCAL","LOAD_ORDERS","SWITCH_ID","POST_ORDER","DATETIME_CHANGE","reducer","state","action","type","payload","time","Date","window","document","getElementById","value","toString","selectedTruck","id","orders","trucks","brands","console","log","truck","brand","raw","localStorage","getItem","prepared","JSON","parse","setItem","stringify"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["import {defaultState} from \"./context\";\r\n\r\nexport const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_TRUCK = 'LOAD_TRUCK',\r\n    GET_SELECTED_TRUCK_FROM_LOCAL = 'GET_SELECTED_TRUCK_FROM_LOCAL',\r\n    SET_SELECTED_TRUCK_FOR_LOCAL = 'SET_SELECTED_TRUCK_FROM_LOCAL',\r\n    LOAD_ORDERS = \"LOAD_ORDERS\",\r\n    SWITCH_ID = \"SWITCH_ID\",\r\n    POST_ORDER = \"POST_ORDER\",\r\n    DATETIME_CHANGE = \"DATETIME_CHANGE\"\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    switch(type) {\r\n        case DATETIME_CHANGE:\r\n            return {\r\n                ...state,\r\n                time: new Date(window.document.getElementById(\"date_need\").value).toString()\r\n            }\r\n        case POST_ORDER:\r\n            return {\r\n                state\r\n            }\r\n        case SWITCH_ID:\r\n            return {\r\n                ...state,\r\n                selectedTruck: {},\r\n                id: state.id == 0 ? 1 : 0\r\n            }\r\n        case LOAD_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: payload.orders\r\n            }\r\n        case LOAD_TRUCKS:\r\n            return {\r\n                ...state,\r\n                trucks: payload.trucks,\r\n                brands: payload.brands\r\n            }\r\n        case LOAD_TRUCK:\r\n            console.log(\"LOAD_TRUCK SUCCESS\")\r\n            return {\r\n                ...state,\r\n                truck: payload.truck,\r\n                brand: payload.brand\r\n            }\r\n        case TOGGLE_TRUCK:\r\n            if (state.selectedTruck == payload.id) {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: {}\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: payload.id,\r\n                }\r\n            }\r\n\r\n        case GET_SELECTED_TRUCK_FROM_LOCAL:\r\n            const raw = localStorage.getItem(`BMSTU USER: ${state.id}`) || {}\r\n            const prepared = JSON.parse(raw)\r\n            if (prepared.id == state.id) {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: prepared.selectedTruck,\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n\r\n        case SET_SELECTED_TRUCK_FOR_LOCAL:\r\n            console.log(`BMSTU USER: ${state.id}`)\r\n            localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\r\n                id: state.id,\r\n                selectedTruck: state.selectedTruck\r\n            }))\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,YAAY,QAAO,WAAW;AAEtC,OAAO,MACHC,YAAY,GAAG,cAAc;EAC7BC,WAAW,GAAG,aAAa;EAC3BC,UAAU,GAAG,YAAY;EACzBC,6BAA6B,GAAG,+BAA+B;EAC/DC,4BAA4B,GAAG,+BAA+B;EAC9DC,WAAW,GAAG,aAAa;EAC3BC,SAAS,GAAG,WAAW;EACvBC,UAAU,GAAG,YAAY;EACzBC,eAAe,GAAG,iBAAiB;AAEvC,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EACI,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAOC,IAAI;IACP,KAAKJ,eAAe;MAChB,OAAO;QACH,GAAGE,KAAK;QACRI,IAAI,EAAE,IAAIC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC,CAACC,QAAQ;MAC9E,CAAC;IACL,KAAKb,UAAU;MACX,OAAO;QACHG;MACJ,CAAC;IACL,KAAKJ,SAAS;MACV,OAAO;QACH,GAAGI,KAAK;QACRW,aAAa,EAAE,CAAC,CAAC;QACjBC,EAAE,EAAEZ,KAAK,CAACY,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG;MAC5B,CAAC;IACL,KAAKjB,WAAW;MACZ,OAAO;QACH,GAAGK,KAAK;QACRa,MAAM,EAAEV,OAAO,CAACU;MACpB,CAAC;IACL,KAAKtB,WAAW;MACZ,OAAO;QACH,GAAGS,KAAK;QACRc,MAAM,EAAEX,OAAO,CAACW,MAAM;QACtBC,MAAM,EAAEZ,OAAO,CAACY;MACpB,CAAC;IACL,KAAKvB,UAAU;MACXwB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,OAAO;QACH,GAAGjB,KAAK;QACRkB,KAAK,EAAEf,OAAO,CAACe,KAAK;QACpBC,KAAK,EAAEhB,OAAO,CAACgB;MACnB,CAAC;IACL,KAAK7B,YAAY;MACb,IAAIU,KAAK,CAACW,aAAa,IAAIR,OAAO,CAACS,EAAE,EAAE;QACnC,OAAO;UACH,GAAGZ,KAAK;UACRW,aAAa,EAAE,CAAC;QACpB,CAAC;MACL,CAAC,MAAM;QACH,OAAO;UACH,GAAGX,KAAK;UACRW,aAAa,EAAER,OAAO,CAACS;QAC3B,CAAC;MACL;IAEJ,KAAKnB,6BAA6B;MAC9B,MAAM2B,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAE,eAActB,KAAK,CAACY,EAAG,EAAC,CAAC,IAAI,CAAC,CAAC;MACjE,MAAMW,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC;MAChC,IAAIG,QAAQ,CAACX,EAAE,IAAIZ,KAAK,CAACY,EAAE,EAAE;QACzB,OAAO;UACH,GAAGZ,KAAK;UACRW,aAAa,EAAEY,QAAQ,CAACZ;QAC5B,CAAC;MACL,CAAC,MAAM;QACH,OAAOX,KAAK;MAChB;IAEJ,KAAKN,4BAA4B;MAC7BsB,OAAO,CAACC,GAAG,CAAE,eAAcjB,KAAK,CAACY,EAAG,EAAC,CAAC;MACtCS,YAAY,CAACK,OAAO,CAAE,eAAc1B,KAAK,CAACY,EAAG,EAAC,EAAEY,IAAI,CAACG,SAAS,CAAC;QAC3Df,EAAE,EAAEZ,KAAK,CAACY,EAAE;QACZD,aAAa,EAAEX,KAAK,CAACW;MACzB,CAAC,CAAC,CAAC;MACH,OAAOX,KAAK;IAChB;MACI,OAAOA,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module"}