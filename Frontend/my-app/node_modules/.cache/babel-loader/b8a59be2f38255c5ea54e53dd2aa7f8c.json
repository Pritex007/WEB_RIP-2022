{"ast":null,"code":"import Cookies from 'js-cookie';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL } from './reducer';\nimport axios, { AxiosInstance } from 'axios';\nexport const checkAuthenticated = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.get(`http://localhost:8000/auth/authenticated`, config);\n    if (res.data.error || res.data.isAuthenticated === 'error') {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        payload: false\n      });\n    } else if (res.data.isAuthenticated === 'success') {\n      dispatch({\n        type: AUTHENTICATED_SUCCESS,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        payload: false\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n      payload: false\n    });\n  }\n};\nexport const login = async (username, password) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password\n  });\n  try {\n    const res = await axios.post('http://localhost:8000/auth/login', body, config);\n    if (res.data.success) {\n      return LOGIN_SUCCESS;\n    } else {\n      return LOGIN_FAIL;\n    }\n  } catch (err) {\n    return LOGIN_FAIL;\n  }\n};\nexport const register = async (username, password, re_password) => {\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password,\n    re_password\n  });\n  console.log(\"Body\", body);\n  try {\n    const res = await axios.post('http://localhost:8000/auth/register', body, config);\n    if (res.data.error) {\n      console.log(\"REGISTER_FAIL\");\n      return REGISTER_FAIL;\n    } else {\n      console.log(\"REGISTER_SUCCESS\");\n      return REGISTER_SUCCESS;\n    }\n  } catch (err) {\n    console.log(\"Error\", err);\n    return REGISTER_FAIL;\n  }\n};\nexport const logout = async () => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    'withCredentials': true\n  });\n  try {\n    const res = await axios.post(`/api/logout`, body, config);\n    if (res.data.success) {\n      return LOGOUT_SUCCESS;\n    } else {\n      return LOGOUT_FAIL;\n    }\n  } catch (err) {\n    return LOGOUT_FAIL;\n  }\n};","map":{"version":3,"names":["Cookies","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","axios","AxiosInstance","checkAuthenticated","dispatch","config","headers","res","get","data","error","isAuthenticated","type","payload","err","login","username","password","withCredentials","body","JSON","stringify","post","success","register","re_password","console","log","logout"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/auth.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL\r\n} from './reducer';\r\n\r\nimport axios, { AxiosInstance } from 'axios';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`http://localhost:8000/auth/authenticated`, config);\r\n\r\n        if (res.data.error || res.data.isAuthenticated === 'error') {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n        else if (res.data.isAuthenticated === 'success') {\r\n            dispatch({\r\n                type: AUTHENTICATED_SUCCESS,\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n            payload: false\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n    const config = {\r\n        withCredentials: true,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:8000/auth/login', body, config)\r\n\r\n        if (res.data.success) {\r\n            return LOGIN_SUCCESS\r\n        } else {\r\n            return LOGIN_FAIL\r\n        }\r\n    } catch(err) {\r\n        return LOGIN_FAIL\r\n    }\r\n};\r\n\r\nexport const register = async(username, password, re_password) => {\r\n    const config = {\r\n        withCredentials: true,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    console.log(\"Body\", body)\r\n    try {\r\n        const res = await axios.post('http://localhost:8000/auth/register', body, config)\r\n        if (res.data.error) {\r\n            console.log(\"REGISTER_FAIL\")\r\n            return REGISTER_FAIL\r\n        } else {\r\n            console.log(\"REGISTER_SUCCESS\")\r\n            return REGISTER_SUCCESS\r\n        }\r\n    } catch (err) {\r\n        console.log(\"Error\", err)\r\n        return REGISTER_FAIL\r\n    }\r\n};\r\n\r\nexport const logout = async ()  => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`/api/logout`, body, config);\r\n\r\n        if (res.data.success) {\r\n            return LOGOUT_SUCCESS\r\n        } else {\r\n            return LOGOUT_FAIL\r\n        }\r\n    } catch(err) {\r\n        return LOGOUT_FAIL\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}