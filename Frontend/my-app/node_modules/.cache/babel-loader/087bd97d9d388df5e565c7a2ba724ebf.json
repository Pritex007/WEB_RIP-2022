{"ast":null,"code":"export const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  LOAD_TRUCK = 'LOAD_TRUCK',\n  GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\n  SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL',\n  LOAD_ORDERS = \"LOAD_ORDERS\",\n  SWITCH_ID = \"SWITCH_ID\";\nexport const reducer = (state, action) => {\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case SWITCH_ID:\n      return {\n        ...state,\n        id: state.id == 0 ? 1 : 0\n      };\n    case LOAD_ORDERS:\n      return {\n        ...state,\n        orders: payload.orders\n      };\n    case LOAD_TRUCKS:\n      return {\n        ...state,\n        trucks: payload.trucks,\n        brands: payload.brands\n      };\n    case LOAD_TRUCK:\n      console.log(\"LOAD_TRUCK SUCCESS\");\n      return {\n        ...state,\n        truck: payload.truck,\n        brand: payload.brand\n      };\n    case TOGGLE_TRUCK:\n      if (state.selectedTrucks.includes(payload.id)) {\n        return {\n          ...state,\n          selectedTrucks: state.selectedTrucks.filter(id => id != payload.id)\n        };\n      } else {\n        return {\n          ...state,\n          selectedTrucks: [...state.selectedTrucks, payload.id]\n        };\n      }\n    case GET_SELECTED_TRUCKS_FROM_LOCAL:\n      const raw = localStorage.getItem('selectedCards') || [];\n      const prepared = JSON.parse(raw);\n      if (prepared.id == state.id) {\n        return {\n          ...state,\n          selectedTrucks: prepared.selectedTrucks\n        };\n      } else {\n        return state;\n      }\n    case SET_SELECTED_TRUCKS_FOR_LOCAL:\n      localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\n        id: state.id,\n        selectedTrucks: state.selectedTrucks\n      }));\n      return state;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["TOGGLE_TRUCK","LOAD_TRUCKS","LOAD_TRUCK","GET_SELECTED_TRUCKS_FROM_LOCAL","SET_SELECTED_TRUCKS_FOR_LOCAL","LOAD_ORDERS","SWITCH_ID","reducer","state","action","type","payload","id","orders","trucks","brands","console","log","truck","brand","selectedTrucks","includes","filter","raw","localStorage","getItem","prepared","JSON","parse","setItem","stringify"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["export const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_TRUCK = 'LOAD_TRUCK',\r\n    GET_SELECTED_TRUCKS_FROM_LOCAL = 'GET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    SET_SELECTED_TRUCKS_FOR_LOCAL = 'SET_SELECTED_TRUCKS_FROM_LOCAL',\r\n    LOAD_ORDERS = \"LOAD_ORDERS\",\r\n    SWITCH_ID = \"SWITCH_ID\"\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    switch(type) {\r\n        case SWITCH_ID:\r\n            return {\r\n                ...state,\r\n                id: state.id == 0 ? 1 : 0\r\n            }\r\n        case LOAD_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: payload.orders\r\n            }\r\n        case LOAD_TRUCKS:\r\n            return {\r\n                ...state,\r\n                trucks: payload.trucks,\r\n                brands: payload.brands\r\n            }\r\n        case LOAD_TRUCK:\r\n            console.log(\"LOAD_TRUCK SUCCESS\")\r\n            return {\r\n                ...state,\r\n                truck: payload.truck,\r\n                brand: payload.brand\r\n            }\r\n        case TOGGLE_TRUCK:\r\n            if (state.selectedTrucks.includes(payload.id)) {\r\n                return {\r\n                    ...state,\r\n                    selectedTrucks: state.selectedTrucks.filter(id => id != payload.id)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    selectedTrucks: [...state.selectedTrucks, payload.id],\r\n                }\r\n            }\r\n\r\n        case GET_SELECTED_TRUCKS_FROM_LOCAL:\r\n            const raw = localStorage.getItem('selectedCards') || []\r\n            const prepared = JSON.parse(raw)\r\n            if (prepared.id == state.id) {\r\n                return {\r\n                    ...state,\r\n                    selectedTrucks: prepared.selectedTrucks,\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n\r\n        case SET_SELECTED_TRUCKS_FOR_LOCAL:\r\n            localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\r\n                id: state.id,\r\n                selectedTrucks: state.selectedTrucks\r\n            }))\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MACHA,YAAY,GAAG,cAAc;EAC7BC,WAAW,GAAG,aAAa;EAC3BC,UAAU,GAAG,YAAY;EACzBC,8BAA8B,GAAG,gCAAgC;EACjEC,6BAA6B,GAAG,gCAAgC;EAChEC,WAAW,GAAG,aAAa;EAC3BC,SAAS,GAAG,WAAW;AAE3B,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C;EACI,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAOC,IAAI;IACP,KAAKJ,SAAS;MACV,OAAO;QACH,GAAGE,KAAK;QACRI,EAAE,EAAEJ,KAAK,CAACI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG;MAC5B,CAAC;IACL,KAAKP,WAAW;MACZ,OAAO;QACH,GAAGG,KAAK;QACRK,MAAM,EAAEF,OAAO,CAACE;MACpB,CAAC;IACL,KAAKZ,WAAW;MACZ,OAAO;QACH,GAAGO,KAAK;QACRM,MAAM,EAAEH,OAAO,CAACG,MAAM;QACtBC,MAAM,EAAEJ,OAAO,CAACI;MACpB,CAAC;IACL,KAAKb,UAAU;MACXc,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,OAAO;QACH,GAAGT,KAAK;QACRU,KAAK,EAAEP,OAAO,CAACO,KAAK;QACpBC,KAAK,EAAER,OAAO,CAACQ;MACnB,CAAC;IACL,KAAKnB,YAAY;MACb,IAAIQ,KAAK,CAACY,cAAc,CAACC,QAAQ,CAACV,OAAO,CAACC,EAAE,CAAC,EAAE;QAC3C,OAAO;UACH,GAAGJ,KAAK;UACRY,cAAc,EAAEZ,KAAK,CAACY,cAAc,CAACE,MAAM,CAACV,EAAE,IAAIA,EAAE,IAAID,OAAO,CAACC,EAAE;QACtE,CAAC;MACL,CAAC,MAAM;QACH,OAAO;UACH,GAAGJ,KAAK;UACRY,cAAc,EAAE,CAAC,GAAGZ,KAAK,CAACY,cAAc,EAAET,OAAO,CAACC,EAAE;QACxD,CAAC;MACL;IAEJ,KAAKT,8BAA8B;MAC/B,MAAMoB,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;MACvD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC;MAChC,IAAIG,QAAQ,CAACd,EAAE,IAAIJ,KAAK,CAACI,EAAE,EAAE;QACzB,OAAO;UACH,GAAGJ,KAAK;UACRY,cAAc,EAAEM,QAAQ,CAACN;QAC7B,CAAC;MACL,CAAC,MAAM;QACH,OAAOZ,KAAK;MAChB;IAEJ,KAAKJ,6BAA6B;MAC9BoB,YAAY,CAACK,OAAO,CAAE,eAAcrB,KAAK,CAACI,EAAG,EAAC,EAAEe,IAAI,CAACG,SAAS,CAAC;QAC3DlB,EAAE,EAAEJ,KAAK,CAACI,EAAE;QACZQ,cAAc,EAAEZ,KAAK,CAACY;MAC1B,CAAC,CAAC,CAAC;MACH,OAAOZ,KAAK;IAChB;MACI,OAAOA,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module"}