{"ast":null,"code":"import { defaultState } from \"./context\";\nexport const TOGGLE_TRUCK = 'TOGGLE_TRUCK',\n  LOAD_TRUCKS = 'LOAD_TRUCKS',\n  LOAD_TRUCK = 'LOAD_TRUCK',\n  GET_SELECTED_TRUCK_FROM_LOCAL = 'GET_SELECTED_TRUCK_FROM_LOCAL',\n  SET_SELECTED_TRUCK_FOR_LOCAL = 'SET_SELECTED_TRUCK_FROM_LOCAL',\n  LOAD_ORDERS = \"LOAD_ORDERS\",\n  SWITCH_ID = \"SWITCH_ID\",\n  POST_ORDER = \"POST_ORDER\",\n  DATETIME_CHANGE = \"DATETIME_CHANGE\",\n  SET_MIN_PRICE = \"SET_MIN_PRICE\",\n  SET_MAX_PRICE = \"SET_MAX_PRICE\",\n  DELETE_TRUCK = \"DELETE_TRUCK\",\n  CHANGE_TRUCK = \"CHANGE_TRUCK\",\n  REGISTER_SUCCESS = \"REGISTER_SUCCESS\",\n  REGISTER_FAIL = \"REGISTER_FAIL\",\n  LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\n  LOGIN_FAIL = \"LOGIN_FAIL\",\n  LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\",\n  LOGOUT_FAIL = \"LOGOUT_FAIL\",\n  AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\",\n  AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\",\n  LOAD_USER_PROFILE_SUCCESS = \"LOAD_USER_PROFILE_SUCCESS\",\n  LOAD_USER_PROFILE_FAIL = \"LOAD_USER_PROFILE_FAIL\";\nexport const reducer = (state, action) => {\n  var _payload$userProfileI;\n  // type, payload\n  const {\n    type,\n    payload\n  } = action;\n  console.log(\"REDUCER\", type);\n  switch (type) {\n    case CHANGE_TRUCK:\n      return {\n        ...state,\n        truck: {\n          ...state.truck,\n          ...payload\n        }\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false\n      };\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false\n      };\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        id: (_payload$userProfileI = payload.userProfileId) !== null && _payload$userProfileI !== void 0 ? _payload$userProfileI : 0,\n        isManager: payload.isManager,\n        isAuthenticated: true\n      };\n    case REGISTER_SUCCESS:\n      console.log(\"REGISTER_SUCCESS\");\n      return {\n        ...state,\n        isAuthenticated: false\n      };\n    case LOGIN_SUCCESS:\n      console.log(\"LOGIN_SUCCESS ID\", payload);\n      return {\n        ...state,\n        id: payload,\n        isAuthenticated: true\n      };\n    case SET_MIN_PRICE:\n      return {\n        ...state,\n        minPrice: payload.minPrice\n      };\n    case SET_MAX_PRICE:\n      return {\n        ...state,\n        maxPrice: payload.maxPrice\n      };\n    case DATETIME_CHANGE:\n      console.log(\"DATETIME_CHANGE\");\n      const newTime = new Date(payload.time).toJSON();\n      return {\n        ...state,\n        time: newTime\n      };\n    case POST_ORDER:\n      console.log(\"POST_ORDER\");\n      return {\n        state\n      };\n    case SWITCH_ID:\n      console.log(\"SWITCH_ID\");\n      return {\n        ...state,\n        selectedTruck: {},\n        id: state.id == 0 ? 1 : 0\n      };\n    case LOAD_ORDERS:\n      console.log(\"LOAD_ORDERS\");\n      return {\n        ...state,\n        orders: payload.orders\n      };\n    case LOAD_TRUCKS:\n      console.log(\"LOAD_TRUCKS\");\n      return {\n        ...state,\n        trucks: payload.trucks\n      };\n    case LOAD_TRUCK:\n      console.log(\"LOAD_TRUCK SUCCESS\");\n      return {\n        ...state,\n        truck: payload.truck\n      };\n    case TOGGLE_TRUCK:\n      console.log(\"TOGGLE_TRUCK\");\n      if (state.selectedTruck == payload.id) {\n        return {\n          ...state,\n          selectedTruck: {}\n        };\n      } else {\n        return {\n          ...state,\n          selectedTruck: payload.id\n        };\n      }\n    case GET_SELECTED_TRUCK_FROM_LOCAL:\n      console.log(`GET_SELECTED_TRUCK_FROM_LOCAL`);\n      try {\n        const raw = localStorage.getItem(`BMSTU USER: ${state.id}`) || {};\n        const prepared = JSON.parse(raw);\n        if (prepared.id == state.id) {\n          return {\n            ...state,\n            selectedTruck: prepared.selectedTruck\n          };\n        } else {\n          return state;\n        }\n      } catch {\n        return state;\n      }\n    case SET_SELECTED_TRUCK_FOR_LOCAL:\n      try {\n        console.log(`SET_SELECTED_TRUCK_FOR_LOCAL`);\n        localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\n          id: state.id,\n          selectedTruck: state.selectedTruck\n        }));\n        return state;\n      } catch {\n        return state;\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["defaultState","TOGGLE_TRUCK","LOAD_TRUCKS","LOAD_TRUCK","GET_SELECTED_TRUCK_FROM_LOCAL","SET_SELECTED_TRUCK_FOR_LOCAL","LOAD_ORDERS","SWITCH_ID","POST_ORDER","DATETIME_CHANGE","SET_MIN_PRICE","SET_MAX_PRICE","DELETE_TRUCK","CHANGE_TRUCK","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","reducer","state","action","type","payload","console","log","truck","isAuthenticated","id","userProfileId","isManager","minPrice","maxPrice","newTime","Date","time","toJSON","selectedTruck","orders","trucks","raw","localStorage","getItem","prepared","JSON","parse","setItem","stringify"],"sources":["C:/Users/prite/WebstormProjects/lab4/my-app/src/Supporting Files/reducer.js"],"sourcesContent":["import {defaultState} from \"./context\";\r\n\r\nexport const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_TRUCK = 'LOAD_TRUCK',\r\n    GET_SELECTED_TRUCK_FROM_LOCAL = 'GET_SELECTED_TRUCK_FROM_LOCAL',\r\n    SET_SELECTED_TRUCK_FOR_LOCAL = 'SET_SELECTED_TRUCK_FROM_LOCAL',\r\n    LOAD_ORDERS = \"LOAD_ORDERS\",\r\n    SWITCH_ID = \"SWITCH_ID\",\r\n    POST_ORDER = \"POST_ORDER\",\r\n    DATETIME_CHANGE = \"DATETIME_CHANGE\",\r\n    SET_MIN_PRICE = \"SET_MIN_PRICE\",\r\n    SET_MAX_PRICE = \"SET_MAX_PRICE\",\r\n\r\n    DELETE_TRUCK = \"DELETE_TRUCK\",\r\n    CHANGE_TRUCK = \"CHANGE_TRUCK\",\r\n\r\n    REGISTER_SUCCESS = \"REGISTER_SUCCESS\",\r\n    REGISTER_FAIL = \"REGISTER_FAIL\",\r\n    LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\r\n    LOGIN_FAIL = \"LOGIN_FAIL\",\r\n    LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\",\r\n    LOGOUT_FAIL = \"LOGOUT_FAIL\",\r\n    AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\",\r\n    AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\",\r\n\r\n    LOAD_USER_PROFILE_SUCCESS = \"LOAD_USER_PROFILE_SUCCESS\",\r\n    LOAD_USER_PROFILE_FAIL = \"LOAD_USER_PROFILE_FAIL\"\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    console.log(\"REDUCER\", type)\r\n    switch(type) {\r\n        case CHANGE_TRUCK:\r\n            return {\r\n                ...state,\r\n                truck: {\r\n                    ...state.truck,\r\n                    ...payload\r\n                }\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                id: payload.userProfileId ?? 0,\r\n                isManager: payload.isManager,\r\n                isAuthenticated: true\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            console.log(\"REGISTER_SUCCESS\")\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            console.log(\"LOGIN_SUCCESS ID\", payload)\r\n            return {\r\n                ...state,\r\n                id: payload,\r\n                isAuthenticated: true\r\n            }\r\n        case SET_MIN_PRICE:\r\n            return {\r\n                ...state,\r\n                minPrice: payload.minPrice\r\n            }\r\n        case SET_MAX_PRICE:\r\n            return {\r\n                ...state,\r\n                maxPrice: payload.maxPrice\r\n            }\r\n        case DATETIME_CHANGE:\r\n            console.log(\"DATETIME_CHANGE\")\r\n            const newTime = new Date(payload.time).toJSON()\r\n            return {\r\n                ...state,\r\n                time: newTime\r\n            }\r\n        case POST_ORDER:\r\n            console.log(\"POST_ORDER\")\r\n            return {\r\n                state\r\n            }\r\n        case SWITCH_ID:\r\n            console.log(\"SWITCH_ID\")\r\n            return {\r\n                ...state,\r\n                selectedTruck: {},\r\n                id: state.id == 0 ? 1 : 0\r\n            }\r\n        case LOAD_ORDERS:\r\n            console.log(\"LOAD_ORDERS\")\r\n            return {\r\n                ...state,\r\n                orders: payload.orders\r\n            }\r\n        case LOAD_TRUCKS:\r\n            console.log(\"LOAD_TRUCKS\")\r\n            return {\r\n                ...state,\r\n                trucks: payload.trucks\r\n            }\r\n        case LOAD_TRUCK:\r\n            console.log(\"LOAD_TRUCK SUCCESS\")\r\n            return {\r\n                ...state,\r\n                truck: payload.truck\r\n            }\r\n        case TOGGLE_TRUCK:\r\n            console.log(\"TOGGLE_TRUCK\")\r\n            if (state.selectedTruck == payload.id) {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: {}\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: payload.id,\r\n                }\r\n            }\r\n\r\n        case GET_SELECTED_TRUCK_FROM_LOCAL:\r\n            console.log(`GET_SELECTED_TRUCK_FROM_LOCAL`)\r\n            try {\r\n                const raw = localStorage.getItem(`BMSTU USER: ${state.id}`) || {}\r\n                const prepared = JSON.parse(raw)\r\n                if (prepared.id == state.id) {\r\n                    return {\r\n                        ...state,\r\n                        selectedTruck: prepared.selectedTruck,\r\n                    }\r\n                } else {\r\n                    return state\r\n                }\r\n            } catch { return state }\r\n\r\n        case SET_SELECTED_TRUCK_FOR_LOCAL:\r\n            try {\r\n            console.log(`SET_SELECTED_TRUCK_FOR_LOCAL`)\r\n            localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\r\n                id: state.id,\r\n                selectedTruck: state.selectedTruck\r\n            }))\r\n            return state\r\n            } catch { return state }\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}